# Copyright ¬©Ô∏è 2022 Sanila Ranatunga. All Rights Reserved
# You are free to use this code in any of your project, but you MUST include the following in your README.md (Copy & paste)
# ##Credits - [feedback-bot] (https://github.com/sanila2007/feedback-bot)

# Read GNU General Public License v3.0: https://github.com/sanila2007/feedback-bot/blob/mai/LICENSE
# Don't forget to follow github.com/sanila2007 because I'm doing these things for free and open source
# Star and fork and enjoy!


from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, ForceReply

from helper import buttons, messages
from plugins import date_info, ratings
from Captcha import captcha_buttons, captcha_text

from pyrogram.errors.exceptions.bad_request_400 import *
from pyrogram.errors import *
from pyrogram import Client, filters
from pyrogram.errors import *
import datetime
from config import Config

bot = Client(
    "bot",
    api_id=7263889,
    api_hash="89c452ed35062d2d31922e6d8d069c90",
    bot_token="2031117879:AAFVvpmYOPo2u5qRJJTqG0OTp2DLIRu1rEw"
)


# START MESSAGE

@bot.on_message(filters.command("start") & filters.private)
def command1(bot, message):
    text = "ReplyKeyboard istifad…ô edin..."
    reply_markup = ReplyKeyboardMarkup(buttons.REPLY_BUTTONS, one_time_keyboard=False, resize_keyboard=True)
    bot.send_photo(message.chat.id, "https://telegra.ph/file/f7dc9203585394d0595b1.jpg",
                   caption=messages.START_TEXT_CAPTION_TEXT),
    bot.send_message(Config.LOG_CHANNEL,
                     f"Yeni istifad…ô√ßi!\n\n‚óâ ƒ∞stifad…ô√ßi - {message.from_user.first_name}\n‚óâ Qo≈üulma vaxtƒ± - {date_info.POSTED_TIME}\n‚óâ Qo≈üulma tarixi - {date_info.POSTED_DATE}")
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


# Learn bots section

@bot.on_message(filters.regex("Botlarƒ± √∂yr…ônin"))
def reply_to_Learn_Bots(bot, message):
    text = messages.LEARN_TEXT
    reply_markup = ReplyKeyboardMarkup(buttons.LEARN_REPLY_BUTTONS, one_time_keyboard=False, resize_keyboard=True)
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


# Restricted Stickers!!

@bot.on_message(filters.sticker)
async def restric_sticker(bot, message):
    bot.send_message(message.chat.id, "Oops!\n\nStickers has been restricted")


@bot.on_message(filters.regex("UserTaggerBotüíñ"))
def reply_to_utube(bot, message):
    bot.send_message(message.chat.id, "Telegram tag botu!!")
    bot.send_photo(message.chat.id, "Telegram tag botu @UserTaggerAz_bot Telegram uzre Qrup v…ô Kanallar da tag prosessin edir")


@bot.on_message((filters.regex("Musiqi Botü§ñüíñ")))
def reply_to_s_ong(bot, message):
    bot.send_message(message.chat.id, "Bot yaxinda hazir olacaq!")
    bot.send_photo(message.chat.id, "BOT yaxinda sizlerle olacaq")


@bot.on_message((filters.regex("Yeni Botü§ñüíñ")))
def reply_to_s_ong(bot, message):
    bot.send_message(message.chat.id, "Yeni bot hazirliq prosessinde di!!!")


# About bot section

@bot.on_message(filters.regex("BOT HAQQINDAü§ñ"))
def reply_to_AboutBot(bot, message):
    bot.send_message(message.chat.id, "<ins>**Bot haqqƒ±nda**</ins>\n\n"
                                      "Adƒ±: <a href=https://t.me/TEAMABASOFASISSTAN_bot>TEAMABASOF ASƒ∞SSTAN ‚ú®</a>\n\n"
                                      "Yaradƒ±lma tarixi: 06/20/2022üéÇ\n\n"
                                      "∆èn son versiya:  v0.8.0\n\n"
                                      "Dil: <a href=www.python.org>Python</a>\n\n"
                                      "Framework: <a href=https://docs.pyrogram.org/>Pyrogram</a>\n\n"
                                      "Server: <a href=https://heroku.com>Heroku</a>\n\n"
                                      "Sahib: <a href=https://t.me/TTteamabasof\n\n</a>"
                                      "M…ônb…ô: üîì\n\n", disable_web_page_preview=True)


# Contact section

@bot.on_message(filters.regex("Contact üìû"))
def reply_to_Contact(bot, message):
    bot.send_message(message.chat.id, messages.CONTACT_TEXT)


# About Developer

@bot.on_message(filters.regex("Sahibim haqdda melumat"))
def reply_to_About(bot, message):
    bot.send_message(message.chat.id,
                     "**<ins>Sahibim haqdda melumat</ins>**\n\n""‚ùñ Adƒ±: ``Abasov R…ôhim``\n\n""‚ùñ Ya≈ü : 16 ƒ∞l (2022\n\n""‚ùñ Ad g√ºn√º : 03.27.2006\n\n""‚ùñ Kimd…ôn : TEAMABASOFüá¶üáø\n\n""‚ùñ Bacarƒ±qlar : Proqramist , Usta\n\n""‚ùñ Ambisiya : Proqram m√ºh…ôndisi olun\n\n""‚ùñ Dill…ôr : Python, HTML, CSS\n\n‚ùñ H…ôl…ô d…ô √ñyr…ônm…ôk : C++, JS, Java")


# Home

@bot.on_message(filters.regex("Ana Menu"))
def greet(bot, message):
    text = messages.REPLY_MESSAGE
    reply_markup = ReplyKeyboardMarkup(buttons.REPLY_BUTTONS, one_time_keyboard=False, resize_keyboard=True)
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True

    )
@bot.on_message(filters.regex("Bitirin"))
def reply_finish(bot, message):
    bot.send_message(message.chat.id, messages.REPLY_MESSAGE, reply_markup=ReplyKeyboardMarkup(buttons.REPLY_BUTTONS, resize_keyboard=True, one_time_keyboard=False))

# Feedbacks section

@bot.on_message(filters.regex("Feedback"))
def reply_to_Feedback(bot, message):
    text = messages.FEEDBACK_REPLY_TEXT
    reply_markup = ReplyKeyboardMarkup(buttons.FEEDBACK_REPLY_BUTTONS, one_time_keyboard=True, resize_keyboard=True)
    message.reply(
        text=text,
        reply_markup=reply_markup
    )


# Credits

@bot.on_message(filters.regex("Kreditl…ôr"))
def reply_to_Credits(bot, message):
    text = messages.CREDITS_TEXT
    reply_markup = ReplyKeyboardMarkup(buttons.HOME_BUTTON_CR, one_time_keyboard=False, resize_keyboard=True)
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )




# Changelog Section

@bot.on_message(filters.regex("D…ôyi≈üiklikl…ôr qeydi"))
def reply_to_Changelog(bot, message):
    reply_markup = ReplyKeyboardMarkup(buttons.HOME_BUTTON_CR, resize_keyboard=True, one_time_keyboard=False)
    bot.send_message(message.chat.id, messages.CHANGELOG_TEXT, disable_web_page_preview=True, reply_markup=reply_markup)


# Assistant Bot Feedback/Report bugs centre

@bot.on_message(filters.regex("UserTaggerBot"))
def reply_to_Assistant(bot, message):
    reply_markup = ForceReply(message.chat.id)
    bot.send_message(message.chat.id, messages.SANILA_ASSISTANT_TEXT,
                     reply_markup=reply_markup
                     , disable_web_page_preview=True)


# Reporting area - Song Downloader bot

@bot.on_message(filters.regex("Yebi Bot"))
def reply_to_Song(bot, message):
    reply_markup = ForceReply(message.chat.id)
    text = messages.SONG_DOWNLOADER_TEXT
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


# Rating bots

@bot.on_message(filters.regex("Botu qiym…ôtl…ôndirin"))
def reply_to_rate_bots(bot, message):
    text = ratings.RATINGS_TEXT
    reply_markup = ReplyKeyboardMarkup(ratings.RATINGS_BUTTONS, resize_keyboard=True, one_time_keyboard=False)
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


# Rating bots

@bot.on_message(filters.regex("Assistant Bot"))
def reply_to_rating_assistant(bot, message):
    bot.send_poll(message.chat.id, "TEAMABASOF ASƒ∞SSTAN Bota nece ulduz ses verersiz?",
                  ["‚≠ê", "‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"])
    bot.send_message(message.chat.id,
                     "**ƒ∞stifad…ô√ßil…ôrin m…ôxfiliyin…ô g√∂r…ô n…ô sizin reytinql…ôriniz, n…ô d…ô dig…ôr reytinql…ôr he√ß kimi g√∂r…ô bilm…ôz.** yenid…ôn g…ôldiyiniz zaman reytinql…ôriniz **sƒ±fƒ±rlanacaq** "
                     "lakin bu reytinql…ôr admin il…ô payla≈üƒ±lacaq.**")


@bot.on_message(filters.regex("UserTaggerBot"))
def reply_to_rating_assistant(bot, message):
    bot.send_poll(message.chat.id, "UserTaggerBot nece ulduz ses verersiz?",
                  ["‚≠ê", "‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"])
    bot.send_message(message.chat.id,
                     "**ƒ∞stifad…ô√ßil…ôrin m…ôxfiliyin…ô g√∂r…ô n…ô sizin reytinql…ôriniz, n…ô d…ô dig…ôr reytinql…ôr he√ß kimi g√∂r…ô bilm…ôz.** Siz onlarƒ± qiym…ôtl…ôndirm…ôk √º√ß√ºn buraya yenid…ôn g…ôldiyiniz zaman reytinql…ôriniz **sƒ±fƒ±rlanacaq** "
                     "lakin bu reytinql…ôr admin il…ô payla≈üƒ±lacaq.**")


@bot.on_message(filters.regex("Musiqi Bot"))
def reply_to_rating_assistant(bot, message):
    bot.send_poll(message.chat.id, "Musiqi bot nece ulduz ses verersiz?",
                  ["‚≠ê", "‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"])
    bot.send_message(message.chat.id,
                     "**ƒ∞stifad…ô√ßil…ôrin m…ôxfiliyin…ô g√∂r…ô n…ô sizin reytinql…ôriniz, n…ô d…ô dig…ôr reytinql…ôr he√ß kimi g√∂r…ô bilm…ôz.** Siz onlarƒ± qiym…ôtl…ôndirm…ôk √º√ß√ºn buraya yenid…ôn g…ôldiyiniz zaman reytinql…ôriniz **sƒ±fƒ±rlanacaq** "
                     "lakin bu reytinql…ôr admin il…ô payla≈üƒ±lacaq.**")


@bot.on_message(filters.regex("Song Bot"))
async def reply_to_rating_assistant(bot, message):
    await bot.send_poll(message.chat.id, "How many stars would you like to give to Song Download Bot?",
                        ["‚≠ê", "‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"])
    await bot.send_message(message.chat.id,
                           "**ƒ∞stifad…ô√ßil…ôrin m…ôxfiliyin…ô g√∂r…ô n…ô sizin reytinql…ôriniz, n…ô d…ô dig…ôr reytinql…ôr he√ß kimi g√∂r…ô bilm…ôz.** Siz onlarƒ± qiym…ôtl…ôndirm…ôk √º√ß√ºn buraya yenid…ôn g…ôldiyiniz zaman reytinql…ôriniz **sƒ±fƒ±rlanacaq** "
                     "lakin bu reytinql…ôr admin il…ô payla≈üƒ±lacaq.**")


# Reporting area - Torrent downloader bot

@bot.on_message(filters.regex("UserTaggerBot"))
def reply_to_Torrent(bot, message):
    reply_markup = ForceReply(message.chat.id)
    text = messages.TORRENT_DOWNLOADER_TEXT
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


# Reporting area - Youtube video downloader bot

@bot.on_message(filters.regex("Musiqi Bot"))
def reply_to_Youtube(bot, message):
    text = messages.YOUTUBE_VIDEO_DOWNLOADER_TEXT
    reply_markup = ForceReply(message.chat.id)
    message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


@bot.on_message(filters.private & filters.command("captcha"))
def captch(bot, message):
    text = captcha_text.CAPTCHA_TEX_T
    reply_markup = InlineKeyboardMarkup(captcha_buttons.CAPTCHA_BUTT_ONS)
    bot.send_photo(message.chat.id, "https://telegra.ph/file/f54447d286c02e3f18070.jpg")
    message.reply(
        text=text,
        reply_markup=reply_markup
    )




@bot.on_message(filters.private)
def fbb(bot, message):
    tet = f"**<u>∆èlaq…ô m…ôlumatƒ±</u>**\n\nMesaj - `{message.text}`\nS√∂zl…ôrin sayƒ± - {message.text.split()}\nG√∂nd…ôr…ôn- {message.from_user.first_name}\nƒ∞sdifad…ô√ßi ID - {message.from_user.id}\nƒ∞stifad…ô√ßi adƒ± - @{message.chat.username}\nDil - {message.from_user.language_code}\nS√∂hb…ôt n√∂v√º - {message.chat.type}\nG√∂nd…ôrm…ô tarixi - {date_info.POSTED_DATE}\nG√∂nd…ôrm…ô vaxtƒ± - {date_info.POSTED_TIME}\nCavab tarixi - {date_info.DATE_OF_REPLY}\n\n<i>*Daha √ßox r…ôy …ôlav…ô edin v…ô ya bu prosesi ba≈üa √ßatdƒ±rmaq √º√ß√ºn ba≈üa vurun!</i>"
    reply_markup = ReplyKeyboardMarkup(buttons.FINISH_FEEDBACK_BUTTONS, one_time_keyboard=True, resize_keyboard=True)
    message.reply(
        text=tet,
        reply_markup=reply_markup,
        quote=True
    )

    bot.send_message(Config.FEEDBACK_CHANNEL, "**Yeni r…ôy m√∂vcuddur!**\n\n" + tet)


@bot.on_callback_query()
def callback_query(Client, CallbackQuery):
    if CallbackQuery.data == "üßä":
        CallbackQuery.edit_message_text(
            captcha_text.PASS_CAPTCHA
        )

    elif CallbackQuery.data == "‚ùå":
        CallbackQuery.edit_message_text(
            captcha_text.MULTY_FAIL,
            reply_markup=InlineKeyboardMarkup(captcha_buttons.RELOAD_CAPTCHA)
        ),

    elif CallbackQuery.data == "üì©" or "üî•" or "üå≠" or "üöë" or "üö°" or "üí°" or "üîé" or "üìà" or "üéÜ" or "üéé" or "üçß" or "‚õë" or "ü™Ä" or "üß∏":
        CallbackQuery.edit_message_text(
            captcha_text.FAIL_CAPTCHA,
            reply_markup=InlineKeyboardMarkup(captcha_buttons.WRONG_CAPTCHA)
        )


print("Bot Aktivdirüì∂‚ú®")

bot.run()
